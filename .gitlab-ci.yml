include: ".ci-templates.yml"

stages:
  - test
  - build-image
  - generate-client
  - publish-client
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .pip-cache/

test:
  stage: test
  extends:
    - .environment-django-ci
  script:
    # if no tests found, convert exit code 5 to 0
    - pytest --cov=. --cov-report html --cov-report term  || [ $? -eq 5 ]
  artifacts:
    paths:
      - htmlcov/

# build and push docker image to registry
build-push-image:
  stage: build-image
  extends:
    - .build-kaniko
  variables:
    IMAGE_NAME: api
    IMAGE_TAG: $CI_COMMIT_SHORT_SHA
    DOCKERFILE_PATH: "Dockerfile"
    DOCKER_BUILD_ARGS: ""

generate_schema:
  stage: generate-client
  extends:
    - .on-release
    - .environment-django-ci
  script:
    - python manage.py spectacular --file schema.yaml
  artifacts:
    paths:
      - schema.yaml

# generate npm package and publish to npm registry
generate_client_openapi:
  stage: generate-client
  extends:
    - .on-release
  image: openjdk:8-jre-alpine
  script:
    - wget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/6.6.0/openapi-generator-cli-6.6.0.jar -O openapi-generator-cli.jar
    - java -jar openapi-generator-cli.jar generate -i $SCHEMA_FILE -g typescript-axios -o $OUTPUT_DIR --additional-properties=npmName="$PACKAGE_NAME",npmVersion="$PACKAGE_VERSION"
  variables:
    PACKAGE_NAME: "@nao/client"
    PACKAGE_VERSION: 1.0.0
    SCHEMA_FILE: schema.yaml
    OUTPUT_DIR: nao-client
  needs:
    - job: generate_schema
      artifacts: true
  artifacts:
    paths:
      - $OUTPUT_DIR/

publish-client:
  stage: publish-client
  extends:
    - .on-release
  image: node:18-alpine
  script:
    - cd nao-client
    - npm install
    - npm run build
    - npm config set registry https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/
    - npm config set @nao:registry https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}">.npmrc
    - latest_version=$(npm view @nao/client version 2>/dev/null)
    - if [ -z "$latest_version" ]; then latest_version="1.0.0"; fi
    - npm version --allow-same-version ${latest_version}
    - npm version minor
    - npm publish
  needs:
    - job: generate_client_openapi
      artifacts: true
